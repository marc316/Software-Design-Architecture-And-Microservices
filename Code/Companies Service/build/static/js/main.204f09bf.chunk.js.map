{"version":3,"sources":["Home.js","Microservice.js","Login.js","Register.js","auth.js","PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","dropdownItems","state","service","query","skiResortCountry","skiResortMinPrice","skiResortMaxPrice","companiesState","companiesFounded","museumState","museumAddress","museumCity","restaurantState","restaurantAddress","restaurantCity","restaurantType","handleSearchClick","bind","assertThisInitialized","_this2","console","log","growl","show","severity","summary","detail","fetch","mode","headers","Access-Control-Allow-Origin","crossDomain","method","then","res","json","data","items","responseBody","YP_SKIRESORT","push","label","value","YP_RESTAURANT","YP_MUSEUM","YP_COMPANY","forEach","item","forceUpdate","catch","err","axios","url","email","password","additionalQueries","concat","window","location","_this3","react_default","a","createElement","ref","el","style","width","height","position","top","left","className","dropdown","options","onChange","e","setState","placeholder","maxWidth","inputtext","target","primereact_button","disabled","onClick","marginLeft","keyfilter","React","Component","Microservice","serviceMap","params","results","loading","queryString","parse","search","searchQuery","serviceName","country","resortname","price","city","type","museumName","address","restaurantName","company","founded","body","searchParam","post","Array","isArray","slice","pricerange","split","display","visibility","length","marginTop","map","result","key","resortName","continent","province","altitude","slopeRating","adultTicketPrice","youthTicketPrice","childTicketPrice","Math","random","toString","substring","name","postalCode","museumURL","museumType","industry","website","progressbar","Login","invalidemail","invalidpassword","loggingin","handleLogin","indexOf","code","localStorage","setItem","token","history","margin","bottom","right","primereact_password","Register","firstname","lastname","confirmpassword","invalidfirstname","invalidlastname","invalidconfirmpassword","registering","registered","handleRegister","firstName","lastName","setTimeout","auth","getToken","getItem","removeToken","removeItem","PrivateRoute","_ref","component","rest","objectWithoutProperties","Route","assign","render","Redirect","to","pathname","from","App","minHeight","backgroundColor","color","cursor","logout","BrowserRouter","Switch","src_PrivateRoute","path","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.204f09bf.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Button} from 'primereact/button';\r\nimport {InputText} from \"primereact/inputtext\";\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {Growl} from 'primereact/growl';\r\n\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\n\r\nimport axios from 'axios';\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.dropdownItems = [];\r\n\r\n        this.state = {\r\n            service: '',\r\n            query: '',\r\n            // ski resort\r\n            skiResortCountry: '', // query = resortname\r\n            skiResortMinPrice: '',\r\n            skiResortMaxPrice: '',\r\n            // companies\r\n            companiesState: '',\r\n            companiesFounded: '',  // query = company\r\n            // museum\r\n            museumState: '',\r\n            museumAddress: '',\r\n            museumCity: '',  // query = museumName\r\n            // restaurants\r\n            restaurantState: '',\r\n            restaurantAddress: '',\r\n            restaurantCity: '',  // query = restaurantName\r\n            restaurantType: ''\r\n        };\r\n\r\n        this.handleSearchClick = this.handleSearchClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"Fetching dropdown items...\");\r\n        this.growl.show({severity: 'info', summary: 'Info', detail: 'Fetching live microservices...'});\r\n        fetch('http://western01-gateway-pipeline.mybluemix.net/service/list', {\r\n            mode: 'cors',\r\n            headers: {'Access-Control-Allow-Origin': '*'},\r\n            crossDomain:true,\r\n            method: 'GET'\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                //console.log(\"data = \", data);\r\n                let items = [];\r\n                console.log(\"Received dropdown items: \", data.responseBody);\r\n                this.growl.show({severity: 'success', summary: 'Success', detail: 'Received live microservices'});\r\n                if (data.responseBody){\r\n                    if (data.responseBody.YP_SKIRESORT === 1){\r\n                        items.push({label: 'Ski Resorts', value: 'skiResort'});\r\n                    }\r\n                    if (data.responseBody.YP_RESTAURANT === 1){\r\n                        items.push({label: 'Restaurants', value: 'restaurants'});\r\n                    }\r\n                    if (data.responseBody.YP_MUSEUM === 1){\r\n                        items.push({label: 'Museums', value: 'museums'});\r\n                    }\r\n                    if (data.responseBody.YP_COMPANY === 1){\r\n                        items.push({label: 'Fortune Companies', value: 'companies'});\r\n                    }\r\n                }\r\n\r\n                items.forEach((item) => {\r\n                    this.dropdownItems.push(item);\r\n                });\r\n\r\n                this.forceUpdate();\r\n\r\n            }).catch((err) => {\r\n                this.growl.show({severity: 'error', summary: 'Error', detail: 'Error fetching microservices'});\r\n                console.log(\"error fetching dropdown: \", err);\r\n            });\r\n\r\n        // fetch auth API\r\n        axios({\r\n            url: 'https://wesetern01-auth.mybluemix.net/user/signin',\r\n            data: {\r\n                email: \"vatsalshah2210@gmail.com\",\r\n                password: \"123456\"\r\n            },\r\n            method: 'post'\r\n        }).then((res) => {\r\n            console.log(\"res = \", res);\r\n        }).catch((err) => console.log(\"Error calling auth API: \", err));\r\n    }\r\n\r\n    handleSearchClick(){\r\n        // serviceName:  [\"skiResort\", \"restaurants\", \"museums\", \"companies\"]\r\n        let additionalQueries = \"\";\r\n        if (this.state.service === 'skiResort'){\r\n            additionalQueries = additionalQueries.concat(\"country=\" + this.state.skiResortCountry,\r\n                \"&price=\" + this.state.skiResortMinPrice + \"-\" + this.state.skiResortMaxPrice + \"&resortname=\" +\r\n                this.state.query);\r\n        }\r\n        else if (this.state.service === 'restaurants'){\r\n            additionalQueries = additionalQueries.concat(\"restaurantName=\" + this.state.query + \"&state=\" +\r\n                this.state.restaurantState + \"&city=\" + this.state.restaurantCity + \"&address=\" + this.state.restaurantAddress\r\n                + \"&type=\" + this.state.restaurantType);\r\n        }\r\n        else if (this.state.service === 'museums'){\r\n            additionalQueries = additionalQueries.concat(\"museumName=\" + this.state.query + \"&state=\" + this.state.museumState +\r\n            \"&city=\" + this.state.museumCity + \"&address=\" + this.state.museumCity);\r\n        }\r\n        else if (this.state.service === 'companies'){\r\n            additionalQueries = additionalQueries.concat(\"companiesState=\" + this.state.companiesState +\r\n                \"&companiesFounded=\" + this.state.companiesFounded + \"&company=\" + this.state.query);\r\n        }\r\n\r\n        console.log(\"searchParam = \", additionalQueries);\r\n\r\n        window.location='/microservice?serviceName=' + this.state.service +\r\n            '&' + additionalQueries;\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n        <div>\r\n            <Growl ref={(el) => this.growl = el} />\r\n            <div style={{width: '50%', height: '85vh'}}>\r\n                <div style={{position: 'relative', top: '40%', left: '50%', width: '100%'}}>\r\n                    <div className=\"p-grid p-fluid\">\r\n                        <div className=\"p-col-12 p-md-8\">\r\n                            <div className=\"p-inputgroup\">\r\n                                <div className='p-col-4 p-md-3' style={{width: '50%'}}>\r\n                                    <Dropdown\r\n                                        options={this.dropdownItems}\r\n                                        value={this.state.service}\r\n                                        onChange={(e) => {\r\n                                            this.setState({service: e.value});\r\n                                            console.log(\"service set to \", e.value);\r\n                                        }}\r\n                                        placeholder=\"Select service...\" style={{maxWidth: '35%'}}\r\n                                    />\r\n                                </div>\r\n                                <div className='p-col-8 p-md-3' style={{width: '100%'}}>\r\n                                    <InputText\r\n                                        placeholder={this.state.service === '' ? \"Keywords...\" : \"Name...\"}\r\n                                        value={this.state.query}\r\n                                        onChange={(e) => this.setState({query: e.target.value})}\r\n                                    />\r\n                                </div>\r\n                                <div className={\"p-col-2 p-md-2\"}>\r\n                                    <Button\r\n                                        label=\"Search\"\r\n                                        disabled={this.state.service === ''}\r\n                                        onClick={this.handleSearchClick}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            {\r\n                                this.state.service === 'skiResort' ?\r\n                                    <span>\r\n                                        <InputText\r\n                                            placeholder=\"Country...\"\r\n                                            value={this.state.skiResortCountry}\r\n                                            onChange={(e) => this.setState({skiResortCountry: e.target.value})}\r\n                                            style={{width: '30%', marginLeft: '25px'}}\r\n                                        />\r\n                                        <InputText\r\n                                            placeholder=\"Min. Price $\"\r\n                                            value={this.state.skiResortMinPrice}\r\n                                            onChange={(e) => this.setState({skiResortMinPrice: e.target.value})}\r\n                                            style={{width: '18%'}}\r\n                                            keyfilter={'int'}\r\n                                        />\r\n                                        <InputText\r\n                                            placeholder=\"Max. Price $\"\r\n                                            value={this.state.skiResortMaxPrice}\r\n                                            onChange={(e) => this.setState({skiResortMaxPrice: e.target.value})}\r\n                                            style={{width: '18%'}}\r\n                                            keyfilter={'int'}\r\n                                        />\r\n                                    </span>\r\n                                    : null\r\n                            }\r\n                            {\r\n                                this.state.service === 'companies' ?\r\n                                    <span>\r\n                                        <InputText\r\n                                            placeholder=\"State\"\r\n                                            value={this.state.companiesState}\r\n                                            onChange={(e) => this.setState({companiesState: e.target.value})}\r\n                                            style={{width: '30%', marginLeft: '50px'}}\r\n                                        />\r\n                                        <InputText\r\n                                           placeholder=\"Founded (year)\"\r\n                                           value={this.state.companiesFounded}\r\n                                           onChange={(e) => this.setState({companiesFounded: e.target.value})}\r\n                                           style={{width: '30%', marginLeft: '0px'}}\r\n                                        />\r\n                                    </span>\r\n                                    : null\r\n                            }\r\n                            {\r\n                                this.state.service === 'museums' ?\r\n                                    <span>\r\n                                        <InputText\r\n                                            placeholder=\"State\"\r\n                                            value={this.state.museumState}\r\n                                            onChange={(e) => this.setState({museumState: e.target.value})}\r\n                                            style={{width: '25%', marginLeft: '50px'}}\r\n                                        />\r\n                                        <InputText\r\n                                            placeholder=\"Address\"\r\n                                            value={this.state.museumAddress}\r\n                                            onChange={(e) => this.setState({museumAddress: e.target.value})}\r\n                                            style={{width: '25%', marginLeft: '0px'}}\r\n                                        />\r\n                                        <InputText\r\n                                            placeholder=\"City\"\r\n                                            value={this.state.museumCity}\r\n                                            onChange={(e) => this.setState({museumCity: e.target.value})}\r\n                                            style={{width: '25%', marginLeft: '0px'}}\r\n                                        />\r\n                                    </span>\r\n                                    : null\r\n                            }\r\n                            {\r\n                                this.state.service === 'restaurants' ?\r\n                                    <span>\r\n                                        <InputText\r\n                                            placeholder=\"State\"\r\n                                            value={this.state.restaurantState}\r\n                                            onChange={(e) => this.setState({restaurantState: e.target.value})}\r\n                                            style={{width: '25%', marginLeft: '50px'}}\r\n                                        />\r\n                                        <InputText\r\n                                            placeholder=\"Address\"\r\n                                            value={this.state.restaurantAddress}\r\n                                            onChange={(e) => this.setState({restaurantAddress: e.target.value})}\r\n                                            style={{width: '22%', marginLeft: '0px'}}\r\n                                        />\r\n                                        <InputText\r\n                                            placeholder=\"City\"\r\n                                            value={this.state.restaurantCity}\r\n                                            onChange={(e) => this.setState({restaurantCity: e.target.value})}\r\n                                            style={{width: '22%', marginLeft: '0px'}}\r\n                                        />\r\n                                        <InputText\r\n                                            placeholder=\"Type\"\r\n                                            value={this.state.restaurantType}\r\n                                            onChange={(e) => this.setState({restaurantType: e.target.value})}\r\n                                            style={{width: '25%', marginLeft: '0px'}}\r\n                                        />\r\n                                    </span>\r\n                                    : null\r\n                            }\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <p>Western University</p>\r\n            </div>\r\n        </div>\r\n    )};\r\n}\r\n\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport queryString from 'query-string';\r\nimport './Microservice.css';\r\nimport axios from \"axios\";\r\nimport {ProgressBar} from 'primereact/progressbar';\r\n\r\nclass Microservice extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.serviceMap = ['Ski Resorts', 'Restaurants', 'Museums', 'Fortune Companies'];\r\n\r\n        this.state = {\r\n            params: {},\r\n            results: [],\r\n            loading: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // calls ski resort endpoint at the moment\r\n        let params = queryString.parse(this.props.location.search);\r\n        console.log(\"params = \", params);\r\n        this.setState({params: params});\r\n\r\n        // build searchQuery from params\r\n        let searchQuery = '';\r\n\r\n        if (params.serviceName === 'skiResort'){\r\n            searchQuery = \"country=\" + params.country + \"&resortname=\" + params.resortname + \"&pricerange=\"\r\n            + params.price;\r\n        }\r\n        else if (params.serviceName === 'museums'){\r\n            searchQuery = \"state=\" + params.state + \"&city=\" + params.city + \"&type=\"\r\n                + params.type + '&museumName=' + params.museumName;\r\n        }\r\n        else if (params.serviceName === 'restaurants'){\r\n            searchQuery = \"state=\" + params.state + \"&city=\" + params.city + \"&type=\"\r\n                + params.type + \"&address=\" + params.address + \"&name=\" + params.restaurantName;\r\n        }\r\n        else if (params.serviceName === 'companies'){\r\n            searchQuery = \"company=\" + params.company + \"&state=\" + params.state + \"&founded=\"\r\n                + params.founded;\r\n        }\r\n\r\n        console.log(\"searchQuery = \", searchQuery);\r\n\r\n        const body = {\r\n            serviceName: params.serviceName,\r\n            searchParam: searchQuery\r\n        };\r\n        console.log(\"body = \", body);\r\n        axios.post( 'http://western01-gateway-pipeline.mybluemix.net/service/search', body)\r\n            .then((res) => {\r\n            console.log(\"res = \", res);\r\n            if (res.data && Array.isArray(res.data)){\r\n                this.setState({results: res.data.slice(0, 500), loading: false})\r\n            }\r\n        }).catch((err) => {\r\n            console.log(\"Error retrieving results: \", err);\r\n            this.setState({loading: false});\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let pricerange = '';\r\n        if (this.state.params && this.state.params.pricerange){\r\n            pricerange = this.state.params.pricerange.split('-');\r\n        }\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <div style={{height: '10vh', width: '100%'}}>\r\n                    <button className=\"button\" style={{display: 'inline-block', left:'5px'}}\r\n                        onClick={() => window.location='/'}>\r\n                        Back\r\n                    </button>\r\n                    <p style={{visibility: 'hidden', width: '50%', display: 'inline-block'}}> Results for \"{this.state.params.searchParam}\" in&nbsp;\r\n                        {this.state.params.country} from ${pricerange[0]} to ${pricerange[1]}\r\n                    </p>\r\n                </div>\r\n\r\n                {this.state.results && this.state.results.length !== 0 ?\r\n                    <table style={{marginTop: '20px'}}>\r\n                        <thead>\r\n                        { this.state.params && this.state.params.serviceName === 'skiResort' ?\r\n                        <tr>\r\n                            <th>Resort Name</th>\r\n                            <th>Continent</th>\r\n                            <th>Country</th>\r\n                            <th>Province</th>\r\n                            <th>Altitude (m)</th>\r\n                            <th>Slope Rating (/5)</th>\r\n                            <th>Adult Ticket Price ($)</th>\r\n                            <th>Youth Ticket Price ($)</th>\r\n                            <th>Child Ticket Price ($)</th>\r\n                        </tr>\r\n                        : this.state.params && this.state.params.serviceName === 'restaurants' ?\r\n                            <tr>\r\n                                <th>Restaurant Name</th>\r\n                                <th>City</th>\r\n                                <th>State</th>\r\n                                <th>Address</th>\r\n                                <th>Type</th>\r\n                                <th>Postal Code</th>\r\n                            </tr>\r\n                        : this.state.params && this.state.params.serviceName === 'museums' ?\r\n                            <tr>\r\n                                <th>Museum Name</th>\r\n                                <th>City</th>\r\n                                <th>State</th>\r\n                                <th>Address</th>\r\n                                <th>Website</th>\r\n                                <th>Type</th>\r\n                            </tr>\r\n                        : this.state.params && this.state.params.serviceName === 'companies' ?\r\n                            <tr>\r\n                                <th>Company Name</th>\r\n                                <th>City</th>\r\n                                <th>State</th>\r\n                                <th>Industry</th>\r\n                                <th>Founded</th>\r\n                                <th>Website</th>\r\n                            </tr>\r\n                        : null\r\n                        }\r\n                            </thead>\r\n                        <tbody>\r\n                        { this.state.results.map((result) => {\r\n                            return this.state.params && this.state.params.serviceName === 'skiResort' ?\r\n                                    <tr key={result.resortName + result.country} style={{}}>\r\n                                        <td>\r\n                                            {result.resortName}\r\n                                        </td>\r\n                                        <td>\r\n                                            {result.continent}\r\n                                        </td>\r\n                                        <td>\r\n                                            {result.country}\r\n                                        </td>\r\n                                        <td>\r\n                                            {result.province}\r\n                                        </td>\r\n                                        <td>\r\n                                            {result.altitude}\r\n                                        </td>\r\n                                        <td>\r\n                                            {result.slopeRating}\r\n                                        </td>\r\n                                        <td>\r\n                                            {result.adultTicketPrice}\r\n                                        </td>\r\n                                        <td>\r\n                                            {result.youthTicketPrice}\r\n                                        </td>\r\n                                        <td>\r\n                                            {result.childTicketPrice}\r\n                                        </td>\r\n                                    </tr>\r\n                                : this.state.params && this.state.params.serviceName === 'restaurants' ?\r\n                                    <tr key={Math.random().toString(36).substring(7)}>\r\n                                        <td>\r\n                                            {result.name}\r\n                                        </td>\r\n                                        <td>\r\n                                            {result.city}\r\n                                        </td>\r\n                                        <td>\r\n                                            {result.state}\r\n                                        </td>\r\n                                        <td>\r\n                                            {result.address}\r\n                                        </td>\r\n                                        <td>\r\n                                            {result.type}\r\n                                        </td>\r\n                                        <td>\r\n                                            {result.postalCode}\r\n                                        </td>\r\n                                    </tr>\r\n                                : this.state.params && this.state.params.serviceName === 'museums' ?\r\n                                    <tr key={Math.random().toString(36).substring(7)}>\r\n                                        <td>\r\n                                            {result.museumName}\r\n                                        </td>\r\n                                        <td>\r\n                                            {result.city}\r\n                                        </td>\r\n                                        <td>\r\n                                            {result.state}\r\n                                        </td>\r\n                                        <td>\r\n                                            {result.address}\r\n                                        </td>\r\n                                        <td>\r\n                                            {result.museumURL}\r\n                                        </td>\r\n                                        <td>\r\n                                            {result.museumType}\r\n                                        </td>\r\n                                    </tr>\r\n                                :  this.state.params && this.state.params.serviceName === 'companies' ?\r\n                                    <tr key={Math.random().toString(36).substring(7)}>\r\n                                        <td>\r\n                                            {result.company}\r\n                                        </td>\r\n                                        <td>\r\n                                            {result.city}\r\n                                        </td>\r\n                                        <td>\r\n                                            {result.state}\r\n                                        </td>\r\n                                        <td>\r\n                                            {result.industry}\r\n                                        </td>\r\n                                        <td>\r\n                                            {result.founded}\r\n                                        </td>\r\n                                        <td>\r\n                                            {result.website}\r\n                                        </td>\r\n                                    </tr>\r\n                                    : null\r\n                        }) }\r\n                        </tbody>\r\n                    </table>\r\n                : !this.state.loading && this.state.results !== [] ? <p>No results found.</p>\r\n                    : <div>\r\n                        <p>Searching...</p>\r\n                        <ProgressBar mode=\"indeterminate\" width=\"50%\"/>\r\n                    </div>\r\n                }\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Microservice;\r\n","import React from 'react';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {Password} from 'primereact/password';\r\nimport './Register.css';\r\n\r\nimport axios from 'axios';\r\n\r\nclass Login extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            invalidemail: false,\r\n            invalidpassword: false,\r\n            loggingin: false\r\n        };\r\n\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    handleLogin(){\r\n        this.setState({\r\n            invalidemail: this.state.email.length === 0 || this.state.email.indexOf('@') === -1,\r\n            invalidpassword: this.state.password.length < 6\r\n        }, () => {\r\n            if (!this.state.invalidemail && !this.state.invalidpassword){\r\n                console.log(\"submitting...\");\r\n                this.setState({loggingin: true});\r\n                axios.post('https://wesetern01-auth.mybluemix.net/user/signin', {\r\n                    email: this.state.email,\r\n                    password: this.state.password\r\n                }).then((res) => {\r\n                    console.log(\"login res = \", res);\r\n                    if (res.data.code === 200){\r\n                        // redirect\r\n                        localStorage.setItem(\"auth_token\", res.data.token);\r\n                        this.setState({loggingin: false});\r\n                        this.props.history.push('/home');\r\n                        //window.location = '/';\r\n                    }\r\n                    else if (res.data.code === 500){\r\n                        // incorrect password\r\n                        this.setState({invalidpassword: true, loggingin: false});\r\n                    }\r\n\r\n                }).catch((err) => {\r\n                    console.log(\"Login Error: \", err);\r\n                    this.setState({loggingin: false});\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return <div style={{margin: '0 auto', display: 'block'}}>\r\n            <h1>Login</h1>\r\n            <div style={{top: 0, bottom: 0, left: 0, right: 0, margin: 'auto',}}>\r\n                <div>\r\n                    {\r\n                        this.state.loggingin ? <p>Logging in...</p> : null\r\n                    }\r\n                    { this.state.invalidemail && (this.state.email.length === 0 || this.state.email.indexOf('@') === -1) ?\r\n                        <p className={\"register-invalid\"}>Please enter a valid email</p>\r\n                        : null }\r\n                    <div className={'register-row'}>\r\n                        <label className={'register-label'}>Email: </label>\r\n                        <InputText\r\n                            placeholder={\"Email\"}\r\n                            value={this.state.email}\r\n                            onChange={(e) => this.setState({email: e.target.value})}\r\n                            className={'register-input'}\r\n                        />\r\n                    </div>\r\n\r\n                    { this.state.invalidpassword && this.state.password.length === 0 ?\r\n                        <p className={\"register-invalid\"}>Please enter a password</p>\r\n                        : null }\r\n                    <div className={'register-row'}>\r\n                        <label className={'register-label'}>Password: </label>\r\n                        <Password\r\n                            placeholder={\"Password\"}\r\n                            value={this.state.password}\r\n                            onChange={(e) => this.setState({password: e.target.value})}\r\n                            className={'register-input'}\r\n                        />\r\n                    </div>\r\n\r\n\r\n                    <br/>\r\n\r\n                    <Button label={\"Submit\"} onClick={this.handleLogin}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {Password} from 'primereact/password';\r\nimport './Register.css';\r\nimport axios from 'axios';\r\n\r\nclass Register extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            firstname: '',\r\n            lastname: '',\r\n            confirmpassword: '',\r\n            invalidemail: false,\r\n            invalidfirstname: false,\r\n            invalidlastname: false,\r\n            invalidpassword: false,\r\n            invalidconfirmpassword: false,\r\n            registering: false,\r\n            registered: false\r\n        };\r\n\r\n        this.handleRegister = this.handleRegister.bind(this);\r\n    }\r\n\r\n    handleRegister(){\r\n        this.setState({\r\n            invalidemail: this.state.email.length === 0 || this.state.email.indexOf('@') === -1,\r\n            invalidfirstname: this.state.firstname.length === 0,\r\n            invalidlastname: this.state.lastname.length === 0,\r\n            invalidpassword: this.state.password.length <= 6,\r\n            invalidconfirmpassword: this.state.invalidpassword || this.state.confirmpassword.length === 0 ||\r\n                this.state.password !== this.state.confirmpassword\r\n        }, () => {\r\n            if (!this.state.invalidemail &&\r\n                !this.state.invalidfirstname &&\r\n                !this.state.invalidlastname &&\r\n                !this.state.invalidpassword &&\r\n                !this.state.invalidconfirmpassword\r\n            ){\r\n                console.log(\"submitting...\");\r\n                this.setState({registering: true}, () => {\r\n                    axios.post('https://wesetern01-auth.mybluemix.net/user/signup', {\r\n                        email: this.state.email,\r\n                        password: this.state.password,\r\n                        firstName: this.state.firstname,\r\n                        lastName: this.state.lastname\r\n                    }).then((res) => {\r\n                        console.log(\"register res = \", res);\r\n                        if (res.data.code === 200){\r\n                            // redirect to login\r\n                            this.setState({registering: false, registered: true});\r\n                            setTimeout(() => this.props.history.push('/login'), 3000);\r\n                        }\r\n\r\n                    }).catch((err) => {\r\n                        console.log(\"Login Error: \", err);\r\n                        this.setState({registering: false});\r\n                    });\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return <div style={{margin: '0 auto', display: 'block'}}>\r\n            <h1>Register</h1>\r\n            <div style={{top: 0, bottom: 0, left: 0, right: 0, margin: 'auto'}}>\r\n                <div>\r\n                    {\r\n                        this.state.registered ? <p>Success! Redirecting to login page...</p> :\r\n                            this.state.registering ? <p>Registering...please wait...</p> : null\r\n                    }\r\n                    { this.state.invalidemail && (this.state.email.length === 0 || this.state.email.indexOf('@') === -1) ?\r\n                        <p className={\"register-invalid\"}>Please enter a valid email</p>\r\n                        : null }\r\n                    <div className={'register-row'}>\r\n                        <label className={'register-label'}>Email: </label>\r\n                        <InputText\r\n                            placeholder={\"Email\"}\r\n                            value={this.state.email}\r\n                            onChange={(e) => this.setState({email: e.target.value})}\r\n                            className={'register-input'}\r\n                        />\r\n                    </div>\r\n\r\n                    { this.state.invalidfirstname && this.state.firstname.length === 0 ?\r\n                        <p className={\"register-invalid\"}>Please enter your first name</p> : null }\r\n                    <div className={'register-row'}>\r\n                        <label className={'register-label'}>First Name: </label>\r\n                        <InputText\r\n                            placeholder={\"First Name\"}\r\n                            value={this.state.firstname}\r\n                            onChange={(e) => this.setState({firstname: e.target.value})}\r\n                            className={'register-input'}\r\n                        />\r\n                    </div>\r\n\r\n                    { this.state.invalidlastname && this.state.lastname.length === 0 ?\r\n                        <p className={\"register-invalid\"}>Please enter your last name</p> : null }\r\n                    <div className={'register-row'}>\r\n                        <label className={'register-label'}>Last Name: </label>\r\n                        <InputText\r\n                            placeholder={\"Last Name\"}\r\n                            value={this.state.lastname}\r\n                            onChange={(e) => this.setState({lastname: e.target.value})}\r\n                            className={'register-input'}\r\n                        />\r\n                    </div>\r\n\r\n                    { this.state.invalidpassword && this.state.password.length <= 6? <p className={\"register-invalid-password\"}>\r\n                        Please enter a valid password (> than 6 characters)\r\n                    </p> : null }\r\n                    <div className={'register-row'}>\r\n                        <label className={'register-label'}>Password: </label>\r\n                        <Password\r\n                            placeholder={\"Password\"}\r\n                            value={this.state.password}\r\n                            onChange={(e) => this.setState({password: e.target.value})}\r\n                            className={'register-input'}\r\n                        />\r\n                    </div>\r\n\r\n                    { this.state.invalidconfirmpassword && (this.state.confirmpassword.length === 0 ||\r\n                        this.state.password !== this.state.confirmpassword) ? <p className={\"register-invalid-confirm\"}>\r\n                        Please make sure the passwords match</p>\r\n                        : null }\r\n                    <div className={'register-row'}>\r\n                        <label className={'register-label'}>Confirm Password: </label>\r\n                        <Password\r\n                            placeholder={\"Confirm password\"}\r\n                            value={this.state.confirmpassword}\r\n                            onChange={(e) => this.setState({confirmpassword: e.target.value})}\r\n                            className={'register-input'}\r\n                        />\r\n                    </div>\r\n                    <br/>\r\n\r\n                    <Button label={\"Submit\"} onClick={this.handleRegister}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nexport default Register;","import jwt from 'jsonwebtoken';\r\n\r\nconst auth = {\r\n    getToken(){\r\n        //console.log(\"hellow orld!!!\", localStorage.getItem(\"auth_token\"));\r\n        let auth_token = localStorage.getItem(\"auth_token\");\r\n        if (auth_token !== null){\r\n            //let decoded = jwt.decode(auth_token);\r\n            return true;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    },\r\n\r\n    removeToken(){\r\n        localStorage.removeItem(\"auth_token\");\r\n    }\r\n};\r\n\r\n\r\nexport default auth;","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\n// Utils\r\nimport auth from './auth';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={props => (\r\n        auth.getToken() !== null ? (\r\n            <Component {...props} />\r\n        ) : (\r\n            <Redirect to={{\r\n                pathname: 'login',\r\n                state: { from: props.location }\r\n            }}\r\n            />\r\n        )\r\n    )} />\r\n);\r\n\r\nexport default PrivateRoute;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport './App.css';\r\nimport Home from './Home';\r\nimport Microservice from './Microservice';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport auth from './auth';\r\n\r\nclass App extends Component {\r\n    logout(){\r\n        auth.removeToken();\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header style={{minHeight: '7vh', backgroundColor: '#0f6ab4', display: 'flex'}}>\r\n            <p style={{margin: 'auto 20px', color: 'white', width: '12%', cursor: 'pointer'}}\r\n               onClick={() => window.location = '/home'}>\r\n                The PurplePages\r\n            </p>\r\n            <div style={{margin: 'auto 0px', width: '72%', color: 'white'}}>\r\n                Software Architecture - Team 01\r\n            </div>\r\n\r\n            <div style={{margin: 'auto 0px'}}>\r\n                { auth.getToken()\r\n                    ?\r\n                        <span onClick={() => {\r\n                            this.logout();\r\n                            window.location = '/';\r\n                        }} style={{color: 'white', cursor: 'pointer'}}>\r\n                            Logout\r\n                        </span>\r\n                    :\r\n                    <div>\r\n                        <span onClick={() => window.location = '/login'} style={{color: 'white', cursor: 'pointer'}}>\r\n                            Login\r\n                        </span>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <span onClick={() => window.location = '/register'} style={{color: 'white', cursor: 'pointer'}}>\r\n                            Register\r\n                        </span>\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n        </header>\r\n        <Router>\r\n            <Switch>\r\n                <PrivateRoute path=\"/home\" component={Home} />\r\n                <PrivateRoute path=\"/microservice\" component={Microservice} />\r\n                <Route path=\"/register\" component={Register} />\r\n                <Route path=\"/login\" component={Login} />\r\n                <PrivateRoute path=\"/\" component={Home} />\r\n            </Switch>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}